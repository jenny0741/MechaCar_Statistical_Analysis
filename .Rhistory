print('Hello')
a <- 3
b <- 3.14
a <- 3
b <- 3.14
disney_characers <- c("mickey","minnie","donald","goofy")
print(disney_characers)
students <- c("Abraham","Beatrice","Cory","Dinah","Eric","Felicia")
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
for (x in students){
print(x)
}
}
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
for (x in students){
}
for (x in students){
print(x)
}
students <- c("Abraham","Beatrice","Cory","Dinah","Eric","Felicia")
for (x in students){
print(x)
}
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
for (std in class){
print(std)
}
}
roll_call(students)
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
for (std in class){
print(std)
}
}
roll_call(students)
students <- c("Abraham","Beatrice","Cory","Dinah","Eric","Felicia")
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
for (std in class){
print(std)
}
}
roll_call(students)
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
for (std in class){
print(std)
}
}
roll_call(students)
locker_combinations <- function(class){
# Create the for loop and print the student name and locker combination.
for (std in class){
combination <- sample(33,3)
print(std)
print(combination)
}
}
locker_combinations(students)
students <- c("Abraham","Beatrice","Cory","Dinah","Eric","Felicia")
prints(students)
print(students)
print('students')
print('Hello')
library(dplyr)
?gather()
?gather()
x <- 3
x <- 5
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
x <- 3
x <- 5
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
setwd("C:/Users/jenny/OneDrive/Desktop/R_analysis/01_Demo")
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
library(tidyverse)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
View(long_table)
View(wide_table)
head(mpg)
?geom_bar()
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
View(mpg_summary)
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
plt + geom_line()
library(dplyr)
library(tidyverse)
mechacar <- read.csv(file='MechaCar_mpg',check.names=F,stringsAsFactors = F)
setwd("C:/Users/jenny/OneDrive/Desktop/UCSD_Extension/Class_Folder/15-Statistics_and_R/MechaCar_Statistical_Analysis")
mechacar <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(mechacar)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, mecha_car_mpg)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, mecha_car_mpg.csv)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, mechacar)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, mechacar))
suspensioncoil <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
View(suspensioncoil)
coil_summary <- suspensioncoil %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
View(coil_summary)
total_summary <- suspensioncoil %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
View(coil_summary)
View(coil_summary)
View(coil_summary)
lot_summary <- suspensioncoil %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI),Variance = var(PSI), SD = sd(PSI))
